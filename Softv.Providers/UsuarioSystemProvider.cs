
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.UsuarioSystemProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : UsuarioSystem Provider
    /// File                    : UsuarioSystemProvider.cs
    /// Creation date           : 18/02/2017
    /// Creation time           : 01:32 p. m.
    /// </summary>
    public abstract class UsuarioSystemProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of UsuarioSystem from DB
        /// </summary>
        private static UsuarioSystemProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a UsuarioSystem instance
        /// </summary>
        public static UsuarioSystemProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.UsuarioSystem.Assembly,
                    SoftvSettings.Settings.UsuarioSystem.DataClass);
                    _Instance = (UsuarioSystemProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public UsuarioSystemProvider()
        {
        }
        /// <summary>
        /// Abstract method to add UsuarioSystem
        ///  /summary>
        /// <param name="UsuarioSystem"></param>
        /// <returns></returns>
        public abstract int AddUsuarioSystem(UsuarioSystemEntity entity_UsuarioSystem);

        /// <summary>
        /// Abstract method to delete UsuarioSystem
        /// </summary>
        public abstract int DeleteUsuarioSystem(int? IdUsuario);

        /// <summary>
        /// Abstract method to update UsuarioSystem
        /// </summary>
        public abstract int EditUsuarioSystem(UsuarioSystemEntity entity_UsuarioSystem);

        /// <summary>
        /// Abstract method to get all UsuarioSystem
        /// </summary>
        public abstract List<UsuarioSystemEntity> GetUsuarioSystem();

        /// <summary>
        /// Abstract method to get all UsuarioSystem List<int> lid
        /// </summary>
        public abstract List<UsuarioSystemEntity> GetUsuarioSystem(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract UsuarioSystemEntity GetUsuarioSystemById(int? IdUsuario);


        public abstract List<UsuarioSystemEntity> GetUsuarioSystemByIdTipoUsuario(int? IdTipoUsuario);

        public abstract List<UsuarioSystemEntity> GetUsuarioSystemByIdUsuario(int? IdUsuario);



        /// <summary>
        ///Get UsuarioSystem
        ///</summary>
        public abstract SoftvList<UsuarioSystemEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get UsuarioSystem
        ///</summary>
        public abstract SoftvList<UsuarioSystemEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual UsuarioSystemEntity GetUsuarioSystemFromReader(IDataReader reader)
        {
            UsuarioSystemEntity entity_UsuarioSystem = null;
            try
            {
                entity_UsuarioSystem = new UsuarioSystemEntity();
                entity_UsuarioSystem.IdUsuario = (int?)(GetFromReader(reader, "IdUsuario"));
                entity_UsuarioSystem.IdTipoUsuario = (int?)(GetFromReader(reader, "IdTipoUsuario"));
                entity_UsuarioSystem.Nombre = (String)(GetFromReader(reader, "Nombre", IsString: true));
                entity_UsuarioSystem.Email = (String)(GetFromReader(reader, "Email", IsString: true));
                entity_UsuarioSystem.Password = (String)(GetFromReader(reader, "Password", IsString: true));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting UsuarioSystem data to entity", ex);
            }
            return entity_UsuarioSystem;
        }

    }

    #region Customs Methods

    #endregion
}

