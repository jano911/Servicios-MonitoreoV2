
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using Softv.Entities;
using Softv.Providers;
using SoftvConfiguration;
using Globals;

namespace Softv.DAO
{
    /// <summary>
    /// Class                   : Softv.DAO.PermisoData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : Permiso Data Access Object
    /// File                    : PermisoDAO.cs
    /// Creation date           : 19/09/2015
    /// Creation time           : 04:34 p. m.
    ///</summary>
    public class PermisoData : PermisoProvider
    {
        /// <summary>
        ///</summary>
        /// <param name="Permiso"> Object Permiso added to List</param>
        public override int MargePermiso(String xml)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.Permiso.ConnectionString))
            {
                SqlCommand comandoSql = CreateCommand("Softv_PermisoMarge", connection);
                AssingParameter(comandoSql, "@xml", xml);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error adding Permiso " + ex.Message, ex);
                }
                finally
                {
                    connection.Close();
                }
            }
            return result;
        }


        /// <summary>
        ///Get Permiso
        ///</summary>
        public override SoftvList<PermisoEntity> GetXml(String xml)
        {
            SoftvList<PermisoEntity> entities = new SoftvList<PermisoEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.Permiso.ConnectionString))
            {
                SqlCommand comandoSql = CreateCommand("Softv_PermisoGetXml", connection);
                AssingParameter(comandoSql, "@xml", xml);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetPermisoFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data Permiso " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entities ?? new SoftvList<PermisoEntity>();
            }
        }


        public override List<PermisoEntity> GetPermiso()
        {
            List<PermisoEntity> PermisoList = new List<PermisoEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.Permiso.ConnectionString))
            {
                SqlCommand comandoSql = CreateCommand("Softv_PermisoGet", connection);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        PermisoList.Add(GetPermisoFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data Permiso" + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return PermisoList;
        }


        public override List<PermisoEntity> GetPermisoRolList(int? IdRol)
        {
            List<PermisoEntity> PermisoList = new List<PermisoEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.Permiso.ConnectionString))
            {
                SqlCommand comandoSql = CreateCommand("Softv_GetPermisoRolList", connection);

                AssingParameter(comandoSql, "@IdRol", IdRol);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        PermisoList.Add(GetPermisoFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data Permiso" + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return PermisoList;
        }





    }
}
