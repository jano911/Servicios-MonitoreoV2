
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using Softv.Entities;
using Softv.Providers;
using SoftvConfiguration;
using Globals;

namespace Softv.DAO
{
    /// <summary>
    /// Class                   : Softv.DAO.UsuarioSystemData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : UsuarioSystem Data Access Object
    /// File                    : UsuarioSystemDAO.cs
    /// Creation date           : 18/02/2017
    /// Creation time           : 01:32 p. m.
    ///</summary>
    public class UsuarioSystemData : UsuarioSystemProvider
    {
        /// <summary>
        ///</summary>
        /// <param name="UsuarioSystem"> Object UsuarioSystem added to List</param>
        public override int AddUsuarioSystem(UsuarioSystemEntity entity_UsuarioSystem)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemAdd", connection);

                AssingParameter(comandoSql, "@IdUsuario", null, pd: ParameterDirection.Output, IsKey: true);

                AssingParameter(comandoSql, "@IdTipoUsuario", entity_UsuarioSystem.IdTipoUsuario);

                AssingParameter(comandoSql, "@Nombre", entity_UsuarioSystem.Nombre);

                AssingParameter(comandoSql, "@Email", entity_UsuarioSystem.Email);

                AssingParameter(comandoSql, "@Password", entity_UsuarioSystem.Password);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error adding UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    connection.Close();
                }
                result = (int)comandoSql.Parameters["@IdUsuarioSystem"].Value;
            }
            return result;
        }

        /// <summary>
        /// Deletes a UsuarioSystem
        ///</summary>
        /// <param name="">  IdUsuario to delete </param>
        public override int DeleteUsuarioSystem(int? IdUsuario)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemDelete", connection);

                AssingParameter(comandoSql, "@IdUsuario", IdUsuario);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error deleting UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Edits a UsuarioSystem
        ///</summary>
        /// <param name="UsuarioSystem"> Objeto UsuarioSystem a editar </param>
        public override int EditUsuarioSystem(UsuarioSystemEntity entity_UsuarioSystem)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemEdit", connection);

                AssingParameter(comandoSql, "@IdUsuario", entity_UsuarioSystem.IdUsuario);

                AssingParameter(comandoSql, "@IdTipoUsuario", entity_UsuarioSystem.IdTipoUsuario);

                AssingParameter(comandoSql, "@Nombre", entity_UsuarioSystem.Nombre);

                AssingParameter(comandoSql, "@Email", entity_UsuarioSystem.Email);

                AssingParameter(comandoSql, "@Password", entity_UsuarioSystem.Password);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();

                    result = int.Parse(ExecuteNonQuery(comandoSql).ToString());

                }
                catch (Exception ex)
                {
                    throw new Exception("Error updating UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Gets all UsuarioSystem
        ///</summary>
        public override List<UsuarioSystemEntity> GetUsuarioSystem()
        {
            List<UsuarioSystemEntity> UsuarioSystemList = new List<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGet", connection);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        UsuarioSystemList.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return UsuarioSystemList;
        }

        /// <summary>
        /// Gets all UsuarioSystem by List<int>
        ///</summary>
        public override List<UsuarioSystemEntity> GetUsuarioSystem(List<int> lid)
        {
            List<UsuarioSystemEntity> UsuarioSystemList = new List<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {
                DataTable IdDT = BuildTableID(lid);

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetByIds", connection);
                AssingParameter(comandoSql, "@IdTable", IdDT);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        UsuarioSystemList.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return UsuarioSystemList;
        }

        /// <summary>
        /// Gets UsuarioSystem by
        ///</summary>
        public override UsuarioSystemEntity GetUsuarioSystemById(int? IdUsuario)
        {
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetById", connection);
                UsuarioSystemEntity entity_UsuarioSystem = null;


                AssingParameter(comandoSql, "@IdUsuario", IdUsuario);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
                    if (rd.Read())
                        entity_UsuarioSystem = GetUsuarioSystemFromReader(rd);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entity_UsuarioSystem;
            }

        }


        public override List<UsuarioSystemEntity> GetUsuarioSystemByIdTipoUsuario(int? IdTipoUsuario)
        {
            List<UsuarioSystemEntity> UsuarioSystemList = new List<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetByIdTipoUsuario", connection);

                AssingParameter(comandoSql, "@IdTipoUsuario", IdTipoUsuario);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        UsuarioSystemList.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return UsuarioSystemList;
        }

        public override List<UsuarioSystemEntity> GetUsuarioSystemByIdUsuario(int? IdUsuario)
        {
            List<UsuarioSystemEntity> UsuarioSystemList = new List<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetByIdUsuario", connection);

                AssingParameter(comandoSql, "@IdUsuario", IdUsuario);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        UsuarioSystemList.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return UsuarioSystemList;
        }


        /// <summary>
        ///Get UsuarioSystem
        ///</summary>
        public override SoftvList<UsuarioSystemEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<UsuarioSystemEntity> entities = new SoftvList<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetPaged", connection);

                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@pageSize", pageSize);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetUsuarioSystemCount();
                return entities ?? new SoftvList<UsuarioSystemEntity>();
            }
        }

        /// <summary>
        ///Get UsuarioSystem
        ///</summary>
        public override SoftvList<UsuarioSystemEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<UsuarioSystemEntity> entities = new SoftvList<UsuarioSystemEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetPagedXml", connection);

                AssingParameter(comandoSql, "@pageSize", pageSize);
                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@xml", xml);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetUsuarioSystemFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetUsuarioSystemCount(xml);
                return entities ?? new SoftvList<UsuarioSystemEntity>();
            }
        }

        /// <summary>
        ///Get Count UsuarioSystem
        ///</summary>
        public int GetUsuarioSystemCount()
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetCount", connection);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }


        /// <summary>
        ///Get Count UsuarioSystem
        ///</summary>
        public int GetUsuarioSystemCount(String xml)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.UsuarioSystem.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_UsuarioSystemGetCountXml", connection);

                AssingParameter(comandoSql, "@xml", xml);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data UsuarioSystem " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        #region Customs Methods

        #endregion
    }
}
